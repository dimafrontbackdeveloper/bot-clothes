// const TelegramBot = require('node-telegram-bot-api')

// const token = '6965202334:AAEcJYVXE_NehXzEZ2NtjjdIHUT3PEvZGwQ'
// // const token = '6085919277:AAGvJfRHmmSVj9FZJFOnhKWaJgJRrc1UwkI'
// const bot = new TelegramBot(token, { polling: true })
// const chatForOrdersId = '-1002109190302'

// // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
// const mainMenu = {
// 	keyboard: [
// 		[{ text: 'üß• –ö–æ—Ñ—Ç–∏ üß•', callback_data: 'menu_coffee1' }],
// 		// [{ text: 'üß• –®—Ç–∞–Ω–∏ üß•', callback_data: 'menu_coffee2' }],
// 	],
// 	resize_keyboard: true,
// }
// // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —Ç–∞ —Ñ–æ—Ç–æ –∑ Inline-–∫–Ω–æ–ø–∫–æ—é
// async function sendItemDescription(
// 	chatId,
// 	itemName,
// 	itemPrice,
// 	itemImage,
// 	buyButtonText,
// 	buyCallbackData
// ) {
// 	const itemMessage = `${itemName}\n–¶—ñ–Ω–∞: ${itemPrice} –≥—Ä–Ω`
// 	const itemOptions = {
// 		caption: itemMessage,
// 		parse_mode: 'Markdown',
// 		photo: itemImage,
// 		reply_markup: {
// 			inline_keyboard: [
// 				[
// 					{
// 						text: buyButtonText,
// 						callback_data: `${buyCallbackData} ${itemName}`,
// 					},
// 				],
// 			],
// 		},
// 	}

// 	// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ
// 	await bot.sendPhoto(chatId, itemImage, itemOptions)
// }

// const state = {}

// bot.on('message', async msg => {
// 	const chatId = msg.chat.id

// 	if (msg.text === '/start') {
// 		await bot.sendMessage(chatId, '–í—ñ—Ç–∞—î–º–æ –≤–∞—Å üëã')
// 	}

// 	if (msg.text === '/start' || msg.text === '–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é') {
// 		state[chatId] = {}
// 		await bot.sendMessage(
// 			chatId,
// 			'–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:',
// 			{
// 				reply_markup: mainMenu,
// 			}
// 		)
// 	}

// 	if (msg.text === 'üß• –ö–æ—Ñ—Ç–∏ üß•') {
// 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ "—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∏ "–Ω–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∫–æ—Ñ—Ç
// 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫–æ—Ñ—Ç:', {
// 			reply_markup: {
// 				inline_keyboard: [
// 					[
// 						{ text: '–£—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'sweatshirts_warm' },
// 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'sweatshirts_not_warm' },
// 					],
// 				],
// 			},
// 		})
// 	}

// 	if (msg.text === 'üß• –®—Ç–∞–Ω–∏ üß•') {
// 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —à—Ç–∞–Ω—ñ–≤:', {
// 			reply_markup: {
// 				inline_keyboard: [
// 					[
// 						{ text: '–£—Ç–µ–ø–ª–µ–Ω–Ω—ã–µ', callback_data: 'coffee_insulated' },
// 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã–µ', callback_data: 'coffee_not_insulated' },
// 					],
// 				],
// 			},
// 		})
// 	}
// })

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
// bot.on('callback_query', async query => {
// 	const chatId = query.message.chat.id
// 	const clothingType = query.data
// 	console.log(clothingType)

// 	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ñ—Ç
// 	if (
// 		clothingType === 'sweatshirts_warm' ||
// 		clothingType === 'sweatshirts_not_warm'
// 	) {
// 		if (clothingType === 'sweatshirts_warm') {
// 			await sendItemDescription(
// 				chatId,
// 				'–ö–æ—Ñ—Ç–∞ 1 —Ç–µ–ø–ª–∞',
// 				'150',
// 				'./imgs/coolmaxpixelwoman1.webp',
// 				'–ö—É–ø–∏—Ç–∏',
// 				'buy'
// 			)
// 		}
// 		if (clothingType === 'sweatshirts_not_warm') {
// 			await sendItemDescription(
// 				chatId,
// 				'–ö–æ—Ñ—Ç–∞ 1 –Ω–µ —Ç–µ–ø–ª–∞',
// 				'150',
// 				'https://images.prom.ua/2410743319_w640_h640_kofta-zhenskaya-kombinirovannaya.jpg',
// 				'–ö—É–ø–∏—Ç–∏',
// 				'buy'
// 			)
// 		}

// 		bot.sendMessage(
// 			chatId,
// 			'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è',
// 			{
// 				reply_markup: {
// 					keyboard: [['–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é']],
// 					resize_keyboard: true,
// 					one_time_keyboard: true,
// 				},
// 			}
// 		)
// 	}

// 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ buy
// 	if (clothingType.split(' ')[0] === 'buy') {
// 		const firstSpaceIndex = clothingType.indexOf(' ')
// 		const productName =
// 			firstSpaceIndex !== -1
// 				? clothingType.slice(firstSpaceIndex + 1)
// 				: clothingType

// 		state[chatId].productName = productName
// 		await bot.sendMessage(chatId, `–í–∏ –æ–±—Ä–∞–ª–∏: "${productName}"`, {})
// 		await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –ø–ª–∞—Ç–µ–∂—É:', {
// 			reply_markup: {
// 				inline_keyboard: [
// 					[
// 						{
// 							text: '–ù–∞–∫–ª–∞–¥–µ–Ω–∏–π',
// 							callback_data: `payment-type imposed`,
// 						},
// 						{
// 							text: '–û–Ω–ª–∞–π–Ω',
// 							callback_data: `payment-type online`,
// 						},
// 					],
// 				],
// 			},
// 		})
// 	}
// 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
// 	if (clothingType.split(' ')[0] === 'payment-type') {
// 		const firstSpaceIndex = clothingType.indexOf(' ')
// 		const paymentType =
// 			firstSpaceIndex !== -1
// 				? clothingType.slice(firstSpaceIndex + 1)
// 				: clothingType

// 		// const productName = clothingType.split(' ')[1]

// 		state[chatId].paymentType = paymentType

// 		bot.sendMessage(chatId, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
// 	}
// })

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// bot.on('text', async msg => {
// 	const chatId = msg.chat.id
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!state[chatId]?.phoneNumber
// 	) {
// 		state[chatId].phoneNumber = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à –ü–Ü–ë`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!state[chatId]?.fullName
// 	) {
// 		state[chatId].fullName = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!!state[chatId]?.fullName &&
// 		!state[chatId]?.city
// 	) {
// 		state[chatId].city = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!!state[chatId]?.fullName &&
// 		!!state[chatId]?.city &&
// 		!state[chatId]?.mail
// 	) {
// 		state[chatId].mail = msg.text

// 		bot.sendMessage(
// 			chatId,
// 			`–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–º–æ–≤–∏–ª–∏: ${state[chatId]?.productName}!`
// 		)
// 		bot.sendMessage(
// 			chatForOrdersId,
// 			`
// 			\n –Ü–º'—è: ${state[chatId]?.fullName}
// 			\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${state[chatId]?.phoneNumber}
// 			\n–ú—ñ—Å—Ç–æ: ${state[chatId]?.city}
// 			\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏: ${state[chatId]?.mail}
// 			\n–¢–æ–≤–∞—Ä: ${state[chatId]?.productName}
// 			\n–¢–∏–ø –æ–ø–ª–∞—Ç–∏: ${state[chatId]?.paymentType === 'imposed' ? '–Ω–∞–ª–æ–∂–∫–∞' : '–æ–Ω–ª–∞–π–Ω'}
// 			\nUPD: —Ç–æ–≤–∞—Ä –∑–∞–º–æ–≤–∏–ª–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±–æ—Ç–∞
// 		`
// 		)
// 		return
// 	}
// })

// // const TelegramBot = require('node-telegram-bot-api')

// // const token = '6965202334:AAEcJYVXE_NehXzEZ2NtjjdIHUT3PEvZGwQ'
// // // const token = '6085919277:AAGvJfRHmmSVj9FZJFOnhKWaJgJRrc1UwkI'
// // const bot = new TelegramBot(token, { polling: true })
// // const chatForOrdersId = '-1002109190302'
// // const fs = require('fs')

// // const getObjectKeys = object => {
// // 	const allKeys = object.reduce((keys, obj) => {
// // 		// –ò—Å–ø–æ–ª—å–∑—É–µ–º Object.keys –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–µ–π —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
// // 		const objKeys = Object.keys(obj)

// // 		// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–∏ —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫ –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É –∫–ª—é—á–µ–π
// // 		return [...keys, ...objKeys]
// // 	}, [])

// // 	// –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è allKeys —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–ª—é—á–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤
// // 	return allKeys
// // }

// // const clothes = JSON.parse(fs.readFileSync('clothes.json', 'utf8'))

// // // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
// // const mainMenu = {
// // 	keyboard: [
// // 		[{ text: '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' }],
// // 		// [{ text: 'üß• –®—Ç–∞–Ω–∏ üß•', callback_data: 'menu_coffee2' }],
// // 	],
// // 	resize_keyboard: true,
// // }

// // async function sendItemDescription(chatId, itemName, itemPrice, itemImages) {
// // 	const itemMessage = `${itemName}\n–¶—ñ–Ω–∞: ${itemPrice} –≥—Ä–Ω`

// // 	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ URL-–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ç–∏–ø–æ–º 'photo'
// // 	const media = itemImages.map(photoUrl => ({
// // 		media: `https://545style.com${photoUrl}`,
// // 		type: 'photo',
// // 		caption: itemMessage, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
// // 		parse_mode: 'Markdown',
// // 	}))

// // 	// –û–ø—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
// // 	const itemOptions = {
// // 		reply_markup: {
// // 			inline_keyboard: [
// // 				[
// // 					{
// // 						text: '–ö—É–ø–∏—Ç–∏',
// // 						callback_data: `buy ${itemName}`,
// // 					},
// // 				],
// // 			],
// // 		},
// // 	}

// // 	try {
// // 		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥—Ä—É–ø—É —Ñ–æ—Ç–æ
// // 		await bot.sendMediaGroup(chatId, media)

// // 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
// // 		await bot.sendMessage(chatId, itemMessage, itemOptions)
// // 	} catch (error) {
// // 		console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≥—Ä—É–ø–∏ —Ñ–æ—Ç–æ:', error)
// // 	}
// // }

// // const state = {}

// // bot.on('message', async msg => {
// // 	const chatId = msg.chat.id

// // 	if (msg.text === '/start') {
// // 		await bot.sendMessage(chatId, '–í—ñ—Ç–∞—î–º–æ –≤–∞—Å üëã')
// // 	}

// // 	if (msg.text === '/start' || msg.text === '–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é') {
// // 		state[chatId] = {}
// // 		await bot.sendMessage(
// // 			chatId,
// // 			'–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:',
// // 			{
// // 				reply_markup: mainMenu,
// // 			}
// // 		)
// // 	}

// // 	if (msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ') {
// // 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ "—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∏ "–Ω–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∫–æ—Ñ—Ç
// // 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫–æ—Ñ—Ç:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{ text: '–£—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'tshirts_warm' },
// // 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'tshirts_not_warm' },
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}

// // 	if (msg.text === 'üß• –®—Ç–∞–Ω–∏ üß•') {
// // 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —à—Ç–∞–Ω—ñ–≤:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{ text: '–£—Ç–µ–ø–ª–µ–Ω–Ω—ã–µ', callback_data: 'coffee_insulated' },
// // 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã–µ', callback_data: 'coffee_not_insulated' },
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}
// // })

// // // –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
// // bot.on('callback_query', async query => {
// // 	const chatId = query.message.chat.id
// // 	const clothingType = query.data
// // 	console.log(clothingType)

// // 	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ñ—Ç
// // 	if (clothingType === 'tshirts_warm' || clothingType === 'tshirts_not_warm') {
// // 		const tshirts = clothes['/futbolky/']

// // 		if (clothingType === 'tshirts_warm') {
// // 			for (const tshirt of tshirts) {
// // 				if (tshirt.isWarm) {
// // 					await sendItemDescription(
// // 						chatId,
// // 						tshirt.name,
// // 						tshirt.price,
// // 						tshirt.imageSrcs
// // 					)
// // 				}
// // 			}
// // 		}
// // 		if (clothingType === 'tshirts_not_warm') {
// // 			for (const tshirt of tshirts) {
// // 				if (!tshirt.isWarm) {
// // 					await sendItemDescription(
// // 						chatId,
// // 						tshirt.name,
// // 						tshirt.price,
// // 						tshirt.imageSrcs
// // 					)
// // 					return
// // 				}
// // 			}
// // 		}

// // 		// bot.sendMessage(
// // 		// 	chatId,
// // 		// 	'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è',
// // 		// 	{
// // 		// 		reply_markup: {
// // 		// 			keyboard: [['–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é']],
// // 		// 			resize_keyboard: true,
// // 		// 			one_time_keyboard: true,
// // 		// 		},
// // 		// 	}
// // 		// )
// // 	}

// // 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ buy
// // 	if (clothingType.split(' ')[0] === 'buy') {
// // 		const firstSpaceIndex = clothingType.indexOf(' ')
// // 		const productName =
// // 			firstSpaceIndex !== -1
// // 				? clothingType.slice(firstSpaceIndex + 1)
// // 				: clothingType

// // 		state[chatId].productName = productName
// // 		await bot.sendMessage(chatId, `–í–∏ –æ–±—Ä–∞–ª–∏: "${productName}"`, {})
// // 		await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –ø–ª–∞—Ç–µ–∂—É:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{
// // 							text: '–ù–∞–∫–ª–∞–¥–µ–Ω–∏–π',
// // 							callback_data: `payment-type imposed`,
// // 						},
// // 						{
// // 							text: '–û–Ω–ª–∞–π–Ω',
// // 							callback_data: `payment-type online`,
// // 						},
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}
// // 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
// // 	if (clothingType.split(' ')[0] === 'payment-type') {
// // 		const firstSpaceIndex = clothingType.indexOf(' ')
// // 		const paymentType =
// // 			firstSpaceIndex !== -1
// // 				? clothingType.slice(firstSpaceIndex + 1)
// // 				: clothingType

// // 		// const productName = clothingType.split(' ')[1]

// // 		state[chatId].paymentType = paymentType

// // 		bot.sendMessage(chatId, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
// // 	}
// // })

// // // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// // bot.on('text', async msg => {
// // 	const chatId = msg.chat.id

// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!state[chatId]?.phoneNumber
// // 	) {
// // 		state[chatId].phoneNumber = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à –ü–Ü–ë`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!state[chatId]?.fullName
// // 	) {
// // 		state[chatId].fullName = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.fullName &&
// // 		!state[chatId]?.city
// // 	) {
// // 		state[chatId].city = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.fullName &&
// // 		!!state[chatId]?.city &&
// // 		!state[chatId]?.mail
// // 	) {
// // 		state[chatId].mail = msg.text

// // 		bot.sendMessage(
// // 			chatId,
// // 			`–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–º–æ–≤–∏–ª–∏: ${state[chatId]?.productName}!`
// // 		)
// // 		bot.sendMessage(
// // 			chatForOrdersId,
// // 			`
// // 			\n –Ü–º'—è: ${state[chatId]?.fullName}
// // 			\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${state[chatId]?.phoneNumber}
// // 			\n–ú—ñ—Å—Ç–æ: ${state[chatId]?.city}
// // 			\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏: ${state[chatId]?.mail}
// // 			\n–¢–æ–≤–∞—Ä: ${state[chatId]?.productName}
// // 			\n–¢–∏–ø –æ–ø–ª–∞—Ç–∏: ${state[chatId]?.paymentType === 'imposed' ? '–Ω–∞–ª–æ–∂–∫–∞' : '–æ–Ω–ª–∞–π–Ω'}
// // 			\nUPD: —Ç–æ–≤–∞—Ä –∑–∞–º–æ–≤–∏–ª–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±–æ—Ç–∞
// // 		`
// // 		)
// // 		return
// // 	}
// // })

// // const TelegramBot = require('node-telegram-bot-api')

// // const token = '6965202334:AAEcJYVXE_NehXzEZ2NtjjdIHUT3PEvZGwQ'
// // // const token = '6085919277:AAGvJfRHmmSVj9FZJFOnhKWaJgJRrc1UwkI'
// // const bot = new TelegramBot(token, { polling: true })
// // const chatForOrdersId = '-1001731459101'
// // const fs = require('fs')

// // const clothes = JSON.parse(fs.readFileSync('clothes.json', 'utf8'))

// // // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
// // const mainMenu = {
// // 	keyboard: [
// // 		[{ text: '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' }],
// // 		[{ text: '–®—Ç–∞–Ω–∏' }],
// // 		[{ text: '–ë—ñ–ª–∏–∑–Ω–∞' }],
// // 		[{ text: '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' }],
// // 		[{ text: '–ê–∫—Å–µ—Å—É–∞—Ä–∏' }],
// // 		[{ text: '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' }],
// // 		[{ text: '–ö–æ–º–ø–ª–µ–∫—Ç–∏' }],
// // 		// [{ text: 'üß• –®—Ç–∞–Ω–∏ üß•', callback_data: 'menu_coffee2' }],
// // 	],
// // 	resize_keyboard: true,
// // }

// // function getRandomInt(min, max) {
// // 	min = Math.ceil(min)
// // 	max = Math.floor(max)
// // 	return Math.floor(Math.random() * (max - min + 1)) + min
// // }

// // async function sendItemDescription(
// // 	chatId,
// // 	itemName,
// // 	itemPrice,
// // 	itemImages,
// // 	itemId,
// // 	category
// // ) {
// // 	const itemMessage = `${itemName}\n–¶—ñ–Ω–∞: ${itemPrice} –≥—Ä–Ω`

// // 	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ URL-–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ç–∏–ø–æ–º 'photo'
// // 	const media = itemImages.map(photoUrl => ({
// // 		media: `https://545style.com${photoUrl}`,
// // 		type: 'photo',
// // 		caption: itemMessage, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
// // 		parse_mode: 'Markdown',
// // 	}))

// // 	// –û–ø—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
// // 	const itemOptions = {
// // 		reply_markup: {
// // 			inline_keyboard: [
// // 				[
// // 					{
// // 						text: '–ö—É–ø–∏—Ç–∏',
// // 						callback_data: `buy ${category} ${itemId}`,
// // 					},
// // 				],
// // 			],
// // 		},
// // 	}

// // 	try {
// // 		console.log(media)
// // 		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥—Ä—É–ø—É —Ñ–æ—Ç–æ
// // 		await bot.sendMediaGroup(chatId, media)

// // 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
// // 		await bot.sendMessage(chatId, itemMessage, itemOptions)
// // 	} catch (error) {
// // 		console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≥—Ä—É–ø–∏ —Ñ–æ—Ç–æ:', error)
// // 	}
// // }

// // const state = {}

// // bot.on('message', async msg => {
// // 	const chatId = msg.chat.id

// // 	if (msg.text === '/start') {
// // 		await bot.sendMessage(chatId, '–í—ñ—Ç–∞—î–º–æ –≤–∞—Å üëã')
// // 	}

// // 	if (msg.text === '/start' || msg.text === '–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é') {
// // 		state[chatId] = {}
// // 		await bot.sendMessage(
// // 			chatId,
// // 			'–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:',
// // 			{
// // 				reply_markup: mainMenu,
// // 			}
// // 		)
// // 	}

// // 	if (
// // 		msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' ||
// // 		msg.text === '–®—Ç–∞–Ω–∏' ||
// // 		msg.text === '–ë—ñ–ª–∏–∑–Ω–∞' ||
// // 		msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' ||
// // 		msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏' ||
// // 		msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' ||
// // 		msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
// // 	) {
// // 		state[chatId] = {}
// // 		state[chatId].clothe =
// // 			msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ'
// // 				? 'tshirts'
// // 				: msg.text === '–®—Ç–∞–Ω–∏'
// // 				? 'trousers'
// // 				: msg.text === '–ë—ñ–ª–∏–∑–Ω–∞'
// // 				? 'whiteness'
// // 				: msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥'
// // 				? 'outerwear'
// // 				: msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏'
// // 				? 'accessories'
// // 				: msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏'
// // 				? 'hats'
// // 				: msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
// // 				? 'kits'
// // 				: ''
// // 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ "—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∏ "–Ω–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∫–æ—Ñ—Ç
// // 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –æ–¥—è–≥—É:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{ text: '–£—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'warm' },
// // 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'not_warm' },
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}
// // })

// // // –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
// // bot.on('callback_query', async query => {
// // 	const chatId = query.message.chat.id
// // 	const clothingType = query.data
// // 	const clothe = state[chatId].clothe
// // 	console.log(clothingType)

// // 	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ñ—Ç
// // 	if (clothingType === 'warm' || clothingType === 'not_warm') {
// // 		const category =
// // 			clothe === 'tshirts'
// // 				? '/futbolky/'
// // 				: clothe === 'trousers'
// // 				? '/shtany/'
// // 				: clothe === 'whiteness'
// // 				? '/termo-bilyzna/'
// // 				: clothe === 'outerwear'
// // 				? '/kurtky/'
// // 				: clothe === 'accessories'
// // 				? '/aksesuary/'
// // 				: clothe === 'hats'
// // 				? '/holovni-ubory/'
// // 				: clothe === 'kits'
// // 				? '/komplekty/'
// // 				: ''
// // 		const clothesByCategory = clothes[category]
// // 		let isClotheExists = false

// // 		if (clothingType === 'warm') {
// // 			for (const clothe of clothesByCategory) {
// // 				if (clothe.isWarm) {
// // 					isClotheExists = true
// // 					await sendItemDescription(
// // 						chatId,
// // 						clothe.name,
// // 						clothe.price,
// // 						clothe.imageSrcs,
// // 						clothe.id,
// // 						category
// // 					)
// // 				}
// // 			}
// // 		}

// // 		if (clothingType === 'not_warm') {
// // 			for (const clothe of clothesByCategory) {
// // 				if (!clothe.isWarm) {
// // 					isClotheExists = true

// // 					await sendItemDescription(
// // 						chatId,
// // 						clothe.name,
// // 						clothe.price,
// // 						clothe.imageSrcs,
// // 						clothe.id,
// // 						category
// // 					)
// // 				}
// // 			}
// // 		}

// // 		if (!isClotheExists) {
// // 			bot.sendMessage(chatId, '–¢–∞–∫–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞—Ä–∞–∑ –Ω–µ–º–∞ —É –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ')
// // 		}

// // 		// bot.sendMessage(
// // 		// 	chatId,
// // 		// 	'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è',
// // 		// 	{
// // 		// 		reply_markup: {
// // 		// 			keyboard: [['–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é']],
// // 		// 			resize_keyboard: true,
// // 		// 			one_time_keyboard: true,
// // 		// 		},
// // 		// 	}
// // 		// )
// // 	}

// // 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ buy
// // 	if (clothingType.split(' ')[0] === 'buy') {
// // 		const firstSpaceIndex = clothingType.indexOf(' ')
// // 		const productCategory = clothingType.split(' ')[1]
// // 		console.log(`productCategory: ${productCategory}`)

// // 		const productId = clothingType.split(' ')[2]
// // 		console.log(`productId: ${productId}`)

// // 		const clothesByCategory = clothes[productCategory]
// // 		console.log(`clothesByCategory: ${clothesByCategory}`)

// // 		const orderedProduct = clothesByCategory.find(clothe => {
// // 			return Number(clothe.id) === Number(productId)
// // 		})
// // 		console.log(`productName: ${JSON.stringify(orderedProduct.name)}`)

// // 		state[chatId].productName = orderedProduct.name
// // 		await bot.sendMessage(
// // 			chatId,
// // 			`–í–∏ –æ–±—Ä–∞–ª–∏: "${state[chatId].productName}"`,
// // 			{}
// // 		)
// // 		await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –ø–ª–∞—Ç–µ–∂—É:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{
// // 							text: '–ù–∞–∫–ª–∞–¥–µ–Ω–∏–π',
// // 							callback_data: `payment-type imposed`,
// // 						},
// // 						{
// // 							text: '–û–Ω–ª–∞–π–Ω',
// // 							callback_data: `payment-type online`,
// // 						},
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}
// // 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
// // 	if (clothingType.split(' ')[0] === 'payment-type') {
// // 		const firstSpaceIndex = clothingType.indexOf(' ')
// // 		const paymentType =
// // 			firstSpaceIndex !== -1
// // 				? clothingType.slice(firstSpaceIndex + 1)
// // 				: clothingType

// // 		// const productName = clothingType.split(' ')[1]

// // 		state[chatId].paymentType = paymentType

// // 		bot.sendMessage(chatId, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
// // 	}
// // })

// // // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// // bot.on('text', async msg => {
// // 	const chatId = msg.chat.id

// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!state[chatId]?.phoneNumber
// // 	) {
// // 		state[chatId].phoneNumber = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!state[chatId]?.size
// // 	) {
// // 		state[chatId].size = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à –ü–Ü–ë`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.size &&
// // 		!state[chatId]?.fullName
// // 	) {
// // 		state[chatId].fullName = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.size &&
// // 		!!state[chatId]?.fullName &&
// // 		!state[chatId]?.city
// // 	) {
// // 		state[chatId].city = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.size &&
// // 		!!state[chatId]?.fullName &&
// // 		!!state[chatId]?.city &&
// // 		!state[chatId]?.mail
// // 	) {
// // 		state[chatId].mail = msg.text

// // 		await bot.sendMessage(
// // 			chatId,
// // 			`–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–º–æ–≤–∏–ª–∏: ${state[chatId]?.productName}!`
// // 		)

// // 		if (
// // 			state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
// // 		) {
// // 			const category = '/futbolky/'

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		}

// // 		if (
// // 			state[chatId]?.productName ===
// // 			'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
// // 		) {
// // 			const category = '/shtany/'

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		}
// // 		if (
// // 			state[chatId]?.productName ===
// // 			'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
// // 		) {
// // 			const category = '/futbolky/'

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		} else if (
// // 			state[chatId]?.productName === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
// // 		) {
// // 			const category = '/futbolky/'
// // 			console.log(clothes[category])

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
// // 			)

// // 			console.log(clothe)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		} else {
// // 			const category = '/holovni-ubory/'

// // 			const categoryClothesLength = clothes[category].length
// // 			const idOfRandomClothe = getRandomInt(0, categoryClothesLength - 1)
// // 			const randomClothe = clothes[category].find(
// // 				clothe => Number(clothe.id) === Number(idOfRandomClothe)
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${randomClothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				randomClothe.name,
// // 				randomClothe.price,
// // 				randomClothe.imageSrcs,
// // 				randomClothe.id,
// // 				category
// // 			)
// // 		}

// // 		await bot.sendMessage(
// // 			chatForOrdersId,
// // 			`
// // 			\n –Ü–º'—è: ${state[chatId]?.fullName}
// // 			\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${state[chatId]?.phoneNumber}
// // 			\n–ú—ñ—Å—Ç–æ: ${state[chatId]?.city}
// // 			\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏: ${state[chatId]?.mail}
// // 			\n–¢–æ–≤–∞—Ä: ${state[chatId]?.productName}
// // 			\n–¢–∏–ø –æ–ø–ª–∞—Ç–∏: ${state[chatId]?.paymentType === 'imposed' ? '–Ω–∞–ª–æ–∂–∫–∞' : '–æ–Ω–ª–∞–π–Ω'}
// // 			\nUPD: —Ç–æ–≤–∞—Ä –∑–∞–º–æ–≤–∏–ª–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±–æ—Ç–∞
// // 		`
// // 		)
// // 		return
// // 	}
// // })

// //------------------------------------------------------------------------------

// // const TelegramBot = require('node-telegram-bot-api')

// // // const token = '6965202334:AAEcJYVXE_NehXzEZ2NtjjdIHUT3PEvZGwQ'
// // const token = '6085919277:AAGvJfRHmmSVj9FZJFOnhKWaJgJRrc1UwkI'
// // const bot = new TelegramBot(token, { polling: true })
// // const chatForOrdersId = '-1001731459101'
// // const fs = require('fs')

// // const clothes = JSON.parse(fs.readFileSync('clothes.json', 'utf8'))

// // // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
// // const mainMenu = {
// // 	keyboard: [
// // 		[{ text: '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' }],
// // 		[{ text: '–®—Ç–∞–Ω–∏' }],
// // 		[{ text: '–ë—ñ–ª–∏–∑–Ω–∞' }],
// // 		[{ text: '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' }],
// // 		[{ text: '–ê–∫—Å–µ—Å—É–∞—Ä–∏' }],
// // 		[{ text: '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' }],
// // 		[{ text: '–ö–æ–º–ø–ª–µ–∫—Ç–∏' }],
// // 		// [{ text: 'üß• –®—Ç–∞–Ω–∏ üß•', callback_data: 'menu_coffee2' }],
// // 	],
// // 	resize_keyboard: true,
// // }

// // function getRandomInt(min, max) {
// // 	min = Math.ceil(min)
// // 	max = Math.floor(max)
// // 	return Math.floor(Math.random() * (max - min + 1)) + min
// // }

// // async function sendItemDescription(
// // 	chatId,
// // 	itemName,
// // 	itemPrice,
// // 	itemImages,
// // 	itemId,
// // 	category
// // ) {
// // 	const itemMessage = `${itemName}\n–¶—ñ–Ω–∞: ${itemPrice} –≥—Ä–Ω`

// // 	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ URL-–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ç–∏–ø–æ–º 'photo'
// // 	const media = itemImages.map(photoUrl => ({
// // 		media: `https://545style.com${photoUrl}`,
// // 		type: 'photo',
// // 		caption: itemMessage, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
// // 		parse_mode: 'Markdown',
// // 	}))

// // 	// –û–ø—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
// // 	const itemOptions = {
// // 		reply_markup: {
// // 			inline_keyboard: [
// // 				[
// // 					{
// // 						text: '–ö—É–ø–∏—Ç–∏',
// // 						callback_data: `buy ${category} ${itemId}`,
// // 					},
// // 				],
// // 			],
// // 		},
// // 	}

// // 	try {
// // 		console.log(media)
// // 		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥—Ä—É–ø—É —Ñ–æ—Ç–æ
// // 		await bot.sendMediaGroup(chatId, media)

// // 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
// // 		await bot.sendMessage(chatId, itemMessage, itemOptions)
// // 	} catch (error) {
// // 		console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≥—Ä—É–ø–∏ —Ñ–æ—Ç–æ:', error)
// // 	}
// // }

// // const state = {}

// // bot.on('message', async msg => {
// // 	const chatId = msg.chat.id

// // 	if (msg.text === '/start') {
// // 		await bot.sendMessage(chatId, '–í—ñ—Ç–∞—î–º–æ –≤–∞—Å üëã')
// // 	}

// // 	if (msg.text === '/start' || msg.text === '–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é') {
// // 		state[chatId] = {}
// // 		await bot.sendMessage(
// // 			chatId,
// // 			'–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:',
// // 			{
// // 				reply_markup: mainMenu,
// // 			}
// // 		)
// // 	}

// // 	if (
// // 		msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' ||
// // 		msg.text === '–®—Ç–∞–Ω–∏' ||
// // 		msg.text === '–ë—ñ–ª–∏–∑–Ω–∞' ||
// // 		msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' ||
// // 		msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏' ||
// // 		msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' ||
// // 		msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
// // 	) {
// // 		state[chatId] = {}
// // 		state[chatId].clothe =
// // 			msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ'
// // 				? 'tshirts'
// // 				: msg.text === '–®—Ç–∞–Ω–∏'
// // 				? 'trousers'
// // 				: msg.text === '–ë—ñ–ª–∏–∑–Ω–∞'
// // 				? 'whiteness'
// // 				: msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥'
// // 				? 'outerwear'
// // 				: msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏'
// // 				? 'accessories'
// // 				: msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏'
// // 				? 'hats'
// // 				: msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
// // 				? 'kits'
// // 				: ''
// // 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ "—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∏ "–Ω–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∫–æ—Ñ—Ç
// // 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –æ–¥—è–≥—É:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{ text: '–£—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'warm' },
// // 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'not_warm' },
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}
// // })

// // // –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
// // bot.on('callback_query', async query => {
// // 	const chatId = query.message.chat.id
// // 	const clothingType = query.data
// // 	const clothe = state[chatId].clothe
// // 	console.log(clothingType)

// // 	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ñ—Ç
// // 	if (clothingType === 'warm' || clothingType === 'not_warm') {
// // 		const category =
// // 			clothe === 'tshirts'
// // 				? '/futbolky/'
// // 				: clothe === 'trousers'
// // 				? '/shtany/'
// // 				: clothe === 'whiteness'
// // 				? '/termo-bilyzna/'
// // 				: clothe === 'outerwear'
// // 				? '/kurtky/'
// // 				: clothe === 'accessories'
// // 				? '/aksesuary/'
// // 				: clothe === 'hats'
// // 				? '/holovni-ubory/'
// // 				: clothe === 'kits'
// // 				? '/komplekty/'
// // 				: ''
// // 		const clothesByCategory = clothes[category]
// // 		let isClotheExists = false

// // 		if (clothingType === 'warm') {
// // 			for (const clothe of clothesByCategory) {
// // 				if (clothe.isWarm) {
// // 					isClotheExists = true
// // 					await sendItemDescription(
// // 						chatId,
// // 						clothe.name,
// // 						clothe.price,
// // 						clothe.imageSrcs,
// // 						clothe.id,
// // 						category
// // 					)
// // 				}
// // 			}
// // 		}

// // 		if (clothingType === 'not_warm') {
// // 			for (const clothe of clothesByCategory) {
// // 				if (!clothe.isWarm) {
// // 					isClotheExists = true

// // 					await sendItemDescription(
// // 						chatId,
// // 						clothe.name,
// // 						clothe.price,
// // 						clothe.imageSrcs,
// // 						clothe.id,
// // 						category
// // 					)
// // 				}
// // 			}
// // 		}

// // 		if (!isClotheExists) {
// // 			bot.sendMessage(chatId, '–¢–∞–∫–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞—Ä–∞–∑ –Ω–µ–º–∞ —É –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ')
// // 		}

// // 		// bot.sendMessage(
// // 		// 	chatId,
// // 		// 	'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è',
// // 		// 	{
// // 		// 		reply_markup: {
// // 		// 			keyboard: [['–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é']],
// // 		// 			resize_keyboard: true,
// // 		// 			one_time_keyboard: true,
// // 		// 		},
// // 		// 	}
// // 		// )
// // 	}

// // 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ buy
// // 	if (clothingType.split(' ')[0] === 'buy') {
// // 		const firstSpaceIndex = clothingType.indexOf(' ')
// // 		const productCategory = clothingType.split(' ')[1]
// // 		console.log(`productCategory: ${productCategory}`)

// // 		const productId = clothingType.split(' ')[2]
// // 		console.log(`productId: ${productId}`)

// // 		const clothesByCategory = clothes[productCategory]
// // 		console.log(`clothesByCategory: ${clothesByCategory}`)

// // 		const orderedProduct = clothesByCategory.find(clothe => {
// // 			return Number(clothe.id) === Number(productId)
// // 		})
// // 		console.log(`productName: ${JSON.stringify(orderedProduct.name)}`)

// // 		state[chatId].productName = orderedProduct.name
// // 		await bot.sendMessage(
// // 			chatId,
// // 			`–í–∏ –æ–±—Ä–∞–ª–∏: "${state[chatId].productName}"`,
// // 			{}
// // 		)
// // 		await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –ø–ª–∞—Ç–µ–∂—É:', {
// // 			reply_markup: {
// // 				inline_keyboard: [
// // 					[
// // 						{
// // 							text: '–ù–∞–∫–ª–∞–¥–µ–Ω–∏–π',
// // 							callback_data: `payment-type imposed`,
// // 						},
// // 						{
// // 							text: '–û–Ω–ª–∞–π–Ω',
// // 							callback_data: `payment-type online`,
// // 						},
// // 					],
// // 				],
// // 			},
// // 		})
// // 	}
// // 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
// // 	if (clothingType.split(' ')[0] === 'payment-type') {
// // 		const firstSpaceIndex = clothingType.indexOf(' ')
// // 		const paymentType =
// // 			firstSpaceIndex !== -1
// // 				? clothingType.slice(firstSpaceIndex + 1)
// // 				: clothingType

// // 		// const productName = clothingType.split(' ')[1]

// // 		state[chatId].paymentType = paymentType

// // 		bot.sendMessage(chatId, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
// // 	}
// // })

// // // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// // bot.on('text', async msg => {
// // 	const chatId = msg.chat.id

// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!state[chatId]?.phoneNumber
// // 	) {
// // 		state[chatId].phoneNumber = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!state[chatId]?.size
// // 	) {
// // 		state[chatId].size = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à –ü–Ü–ë`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.size &&
// // 		!state[chatId]?.fullName
// // 	) {
// // 		state[chatId].fullName = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.size &&
// // 		!!state[chatId]?.fullName &&
// // 		!state[chatId]?.city
// // 	) {
// // 		state[chatId].city = msg.text

// // 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏`)
// // 		return
// // 	}
// // 	if (
// // 		!!state[chatId]?.productName &&
// // 		!!state[chatId]?.paymentType &&
// // 		!!state[chatId]?.phoneNumber &&
// // 		!!state[chatId]?.size &&
// // 		!!state[chatId]?.fullName &&
// // 		!!state[chatId]?.city &&
// // 		!state[chatId]?.mail
// // 	) {
// // 		state[chatId].mail = msg.text

// // 		await bot.sendMessage(
// // 			chatId,
// // 			`–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–º–æ–≤–∏–ª–∏: ${state[chatId]?.productName}!`
// // 		)

// // 		if (
// // 			state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
// // 		) {
// // 			const category = '/futbolky/'

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		}

// // 		if (
// // 			state[chatId]?.productName ===
// // 			'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
// // 		) {
// // 			const category = '/shtany/'

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		}
// // 		if (
// // 			state[chatId]?.productName ===
// // 			'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
// // 		) {
// // 			const category = '/futbolky/'

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		} else if (
// // 			state[chatId]?.productName === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
// // 		) {
// // 			const category = '/futbolky/'
// // 			console.log(clothes[category])

// // 			const clothe = clothes[category].find(
// // 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
// // 			)

// // 			console.log(clothe)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				clothe.name,
// // 				clothe.price,
// // 				clothe.imageSrcs,
// // 				clothe.id,
// // 				category
// // 			)
// // 		} else {
// // 			const category = '/holovni-ubory/'

// // 			const categoryClothesLength = clothes[category].length
// // 			const idOfRandomClothe = getRandomInt(0, categoryClothesLength - 1)
// // 			const randomClothe = clothes[category].find(
// // 				clothe => Number(clothe.id) === Number(idOfRandomClothe)
// // 			)

// // 			await bot.sendMessage(
// // 				chatId,
// // 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${randomClothe.name}!`
// // 			)

// // 			await sendItemDescription(
// // 				chatId,
// // 				randomClothe.name,
// // 				randomClothe.price,
// // 				randomClothe.imageSrcs,
// // 				randomClothe.id,
// // 				category
// // 			)
// // 		}

// // 		await bot.sendMessage(
// // 			chatForOrdersId,
// // 			`
// // 			\n –Ü–º'—è: ${state[chatId]?.fullName}
// // 			\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${state[chatId]?.phoneNumber}
// // 			\n–ú—ñ—Å—Ç–æ: ${state[chatId]?.city}
// // 			\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏: ${state[chatId]?.mail}
// // 			\n–¢–æ–≤–∞—Ä: ${state[chatId]?.productName}
// // 			\n–¢–∏–ø –æ–ø–ª–∞—Ç–∏: ${state[chatId]?.paymentType === 'imposed' ? '–Ω–∞–ª–æ–∂–∫–∞' : '–æ–Ω–ª–∞–π–Ω'}
// // 			\nUPD: —Ç–æ–≤–∞—Ä –∑–∞–º–æ–≤–∏–ª–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±–æ—Ç–∞
// // 		`
// // 		)
// // 		return
// // 	}
// // })

// const TelegramBot = require('node-telegram-bot-api')

// const token = '6965202334:AAEcJYVXE_NehXzEZ2NtjjdIHUT3PEvZGwQ'
// // const token = '6085919277:AAGvJfRHmmSVj9FZJFOnhKWaJgJRrc1UwkI'
// const bot = new TelegramBot(token, { polling: true })
// const chatForOrdersId = '-1001731459101'
// const fs = require('fs')

// const clothes = JSON.parse(fs.readFileSync('clothes.json', 'utf8'))

// // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
// const mainMenu = {
// 	keyboard: [
// 		[{ text: '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' }],
// 		[{ text: '–®—Ç–∞–Ω–∏' }],
// 		[{ text: '–ë—ñ–ª–∏–∑–Ω–∞' }],
// 		[{ text: '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' }],
// 		[{ text: '–ê–∫—Å–µ—Å—É–∞—Ä–∏' }],
// 		[{ text: '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' }],
// 		[{ text: '–ö–æ–º–ø–ª–µ–∫—Ç–∏' }],
// 		// [{ text: 'üß• –®—Ç–∞–Ω–∏ üß•', callback_data: 'menu_coffee2' }],
// 	],
// 	resize_keyboard: true,
// }

// function getRandomInt(min, max) {
// 	min = Math.ceil(min)
// 	max = Math.floor(max)
// 	return Math.floor(Math.random() * (max - min + 1)) + min
// }

// async function sendItemDescription(
// 	chatId,
// 	itemName,
// 	itemPrice,
// 	itemImages,
// 	itemId,
// 	category
// ) {
// 	const itemMessage = `${itemName}\n–¶—ñ–Ω–∞: ${itemPrice} –≥—Ä–Ω`

// 	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ URL-–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ç–∏–ø–æ–º 'photo'
// 	const media = itemImages.map(photoUrl => ({
// 		media: `https://545style.com${photoUrl}`,
// 		type: 'photo',
// 		caption: itemMessage, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
// 		parse_mode: 'Markdown',
// 	}))

// 	// –û–ø—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
// 	const itemOptions = {
// 		reply_markup: {
// 			inline_keyboard: [
// 				[
// 					{
// 						text: '–ö—É–ø–∏—Ç–∏',
// 						callback_data: `buy ${category} ${itemId}`,
// 					},
// 					{
// 						text: '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—å –±—ñ–ª—å—à–µ —Ñ–æ—Ç–æ–∫',
// 						callback_data: `more_photos ${category} ${itemId}`,
// 					},
// 				],
// 			],
// 		},
// 	}

// 	try {
// 		console.log(media)
// 		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥—Ä—É–ø—É —Ñ–æ—Ç–æ
// 		await bot.sendPhoto(chatId, media[0].media)
// 		// await bot.sendPhoto(chatId, media[0].media, {
// 		// 	caption: itemMessage,
// 		// 	...itemOptions,
// 		// })

// 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
// 		await bot.sendMessage(chatId, itemMessage, itemOptions)
// 	} catch (error) {
// 		console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≥—Ä—É–ø–∏ —Ñ–æ—Ç–æ:', error)
// 	}
// }

// const state = {}

// bot.on('message', async msg => {
// 	const chatId = msg.chat.id

// 	if (msg.text === '/start') {
// 		await bot.sendMessage(chatId, '–í—ñ—Ç–∞—î–º–æ –≤–∞—Å üëã')
// 	}

// 	if (msg.text === '/start' || msg.text === '–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é') {
// 		state[chatId] = {}
// 		await bot.sendMessage(
// 			chatId,
// 			'–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:',
// 			{
// 				reply_markup: mainMenu,
// 			}
// 		)
// 	}

// 	if (
// 		msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' ||
// 		msg.text === '–®—Ç–∞–Ω–∏' ||
// 		msg.text === '–ë—ñ–ª–∏–∑–Ω–∞' ||
// 		msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' ||
// 		msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏' ||
// 		msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' ||
// 		msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
// 	) {
// 		state[chatId] = {}
// 		state[chatId].clothe =
// 			msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ'
// 				? 'tshirts'
// 				: msg.text === '–®—Ç–∞–Ω–∏'
// 				? 'trousers'
// 				: msg.text === '–ë—ñ–ª–∏–∑–Ω–∞'
// 				? 'whiteness'
// 				: msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥'
// 				? 'outerwear'
// 				: msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏'
// 				? 'accessories'
// 				: msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏'
// 				? 'hats'
// 				: msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
// 				? 'kits'
// 				: ''
// 		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ "—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∏ "–Ω–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∫–æ—Ñ—Ç
// 		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –æ–¥—è–≥—É:', {
// 			reply_markup: {
// 				inline_keyboard: [
// 					[
// 						{ text: '–£—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'warm' },
// 						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'not_warm' },
// 					],
// 				],
// 			},
// 		})
// 	}
// })

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
// bot.on('callback_query', async query => {
// 	const chatId = query.message.chat.id
// 	const clothingType = query.data
// 	const clothe = state[chatId].clothe
// 	console.log(clothingType)

// 	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ñ—Ç
// 	if (clothingType === 'warm' || clothingType === 'not_warm') {
// 		const category =
// 			clothe === 'tshirts'
// 				? '/futbolky/'
// 				: clothe === 'trousers'
// 				? '/shtany/'
// 				: clothe === 'whiteness'
// 				? '/termo-bilyzna/'
// 				: clothe === 'outerwear'
// 				? '/kurtky/'
// 				: clothe === 'accessories'
// 				? '/aksesuary/'
// 				: clothe === 'hats'
// 				? '/holovni-ubory/'
// 				: clothe === 'kits'
// 				? '/komplekty/'
// 				: ''
// 		const clothesByCategory = clothes[category]
// 		let isClotheExists = false

// 		if (clothingType === 'warm') {
// 			for (const clothe of clothesByCategory) {
// 				if (clothe.isWarm) {
// 					isClotheExists = true
// 					await sendItemDescription(
// 						chatId,
// 						clothe.name,
// 						clothe.price,
// 						clothe.imageSrcs,
// 						clothe.id,
// 						category
// 					)
// 				}
// 			}
// 		}

// 		if (clothingType === 'not_warm') {
// 			for (const clothe of clothesByCategory) {
// 				if (!clothe.isWarm) {
// 					isClotheExists = true

// 					await sendItemDescription(
// 						chatId,
// 						clothe.name,
// 						clothe.price,
// 						clothe.imageSrcs,
// 						clothe.id,
// 						category
// 					)
// 				}
// 			}
// 		}

// 		if (!isClotheExists) {
// 			bot.sendMessage(chatId, '–¢–∞–∫–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞—Ä–∞–∑ –Ω–µ–º–∞ —É –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ')
// 		}

// 		// bot.sendMessage(
// 		// 	chatId,
// 		// 	'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è',
// 		// 	{
// 		// 		reply_markup: {
// 		// 			keyboard: [['–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é']],
// 		// 			resize_keyboard: true,
// 		// 			one_time_keyboard: true,
// 		// 		},
// 		// 	}
// 		// )
// 	}

// 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ buy
// 	if (clothingType.split(' ')[0] === 'buy') {
// 		const productCategory = clothingType.split(' ')[1]
// 		const productId = clothingType.split(' ')[2]
// 		const clothesByCategory = clothes[productCategory]
// 		const orderedProduct = clothesByCategory.find(clothe => {
// 			return Number(clothe.id) === Number(productId)
// 		})

// 		state[chatId].productName = orderedProduct.name

// 		await bot.sendMessage(
// 			chatId,
// 			`–í–∏ –æ–±—Ä–∞–ª–∏: "${state[chatId].productName}"`,
// 			{}
// 		)
// 		await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –ø–ª–∞—Ç–µ–∂—É:', {
// 			reply_markup: {
// 				inline_keyboard: [
// 					[
// 						{
// 							text: '–ù–∞–∫–ª–∞–¥–µ–Ω–∏–π',
// 							callback_data: `payment-type imposed`,
// 						},
// 						{
// 							text: '–û–Ω–ª–∞–π–Ω',
// 							callback_data: `payment-type online`,
// 						},
// 					],
// 				],
// 			},
// 		})
// 	}
// 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
// 	if (clothingType.split(' ')[0] === 'payment-type') {
// 		const firstSpaceIndex = clothingType.indexOf(' ')
// 		const paymentType =
// 			firstSpaceIndex !== -1
// 				? clothingType.slice(firstSpaceIndex + 1)
// 				: clothingType

// 		// const productName = clothingType.split(' ')[1]

// 		state[chatId].paymentType = paymentType

// 		bot.sendMessage(chatId, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
// 	}

// 	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
// 	if (clothingType.split(' ')[0] === 'more_photos') {
// 		const productCategory = clothingType.split(' ')[1]
// 		const productId = clothingType.split(' ')[2]
// 		const clothesByCategory = clothes[productCategory]
// 		const orderedProduct = clothesByCategory.find(clothe => {
// 			return Number(clothe.id) === Number(productId)
// 		})

// 		const itemOptions = {
// 			reply_markup: {
// 				inline_keyboard: [
// 					[
// 						{
// 							text: '–ö—É–ø–∏—Ç–∏',
// 							callback_data: `buy ${productCategory} ${productId}`,
// 						},
// 					],
// 				],
// 			},
// 		}

// 		const media = orderedProduct.imageSrcs.map(photoUrl => ({
// 			media: `https://545style.com${photoUrl}`,
// 			type: 'photo',
// 			caption: '1', // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
// 			parse_mode: 'Markdown',
// 		}))

// 		await bot.sendMessage(chatId, `–ë—ñ–ª—å—à–µ —Ñ–æ—Ç–æ–∫ –¥–ª—è "${orderedProduct.name}"`)
// 		await bot.sendMediaGroup(chatId, media)
// 		await bot.sendMessage(
// 			chatId,
// 			`–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç–∏", —â–æ–± –ø—Ä–∏–¥–±–∞—Ç–∏ —Ç–æ–≤–∞—Ä`,
// 			itemOptions
// 		)
// 	}
// })

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// bot.on('text', async msg => {
// 	const chatId = msg.chat.id

// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!state[chatId]?.phoneNumber
// 	) {
// 		state[chatId].phoneNumber = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!state[chatId]?.size
// 	) {
// 		state[chatId].size = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à –ü–Ü–ë`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!!state[chatId]?.size &&
// 		!state[chatId]?.fullName
// 	) {
// 		state[chatId].fullName = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!!state[chatId]?.size &&
// 		!!state[chatId]?.fullName &&
// 		!state[chatId]?.city
// 	) {
// 		state[chatId].city = msg.text

// 		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏`)
// 		return
// 	}
// 	if (
// 		!!state[chatId]?.productName &&
// 		!!state[chatId]?.paymentType &&
// 		!!state[chatId]?.phoneNumber &&
// 		!!state[chatId]?.size &&
// 		!!state[chatId]?.fullName &&
// 		!!state[chatId]?.city &&
// 		!state[chatId]?.mail
// 	) {
// 		state[chatId].mail = msg.text

// 		await bot.sendMessage(
// 			chatId,
// 			`–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–º–æ–≤–∏–ª–∏: ${state[chatId]?.productName}!`
// 		)

// 		if (
// 			state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
// 		) {
// 			const category = '/futbolky/'

// 			const clothe = clothes[category].find(
// 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
// 			)

// 			await bot.sendMessage(
// 				chatId,
// 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// 			)

// 			await sendItemDescription(
// 				chatId,
// 				clothe.name,
// 				clothe.price,
// 				clothe.imageSrcs,
// 				clothe.id,
// 				category
// 			)
// 		}

// 		if (
// 			state[chatId]?.productName ===
// 			'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
// 		) {
// 			const category = '/shtany/'

// 			const clothe = clothes[category].find(
// 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
// 			)

// 			await bot.sendMessage(
// 				chatId,
// 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// 			)

// 			await sendItemDescription(
// 				chatId,
// 				clothe.name,
// 				clothe.price,
// 				clothe.imageSrcs,
// 				clothe.id,
// 				category
// 			)
// 		}
// 		if (
// 			state[chatId]?.productName ===
// 			'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
// 		) {
// 			const category = '/futbolky/'

// 			const clothe = clothes[category].find(
// 				clothe => clothe.name === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
// 			)

// 			await bot.sendMessage(
// 				chatId,
// 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// 			)

// 			await sendItemDescription(
// 				chatId,
// 				clothe.name,
// 				clothe.price,
// 				clothe.imageSrcs,
// 				clothe.id,
// 				category
// 			)
// 		} else if (
// 			state[chatId]?.productName === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
// 		) {
// 			const category = '/futbolky/'
// 			console.log(clothes[category])

// 			const clothe = clothes[category].find(
// 				clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
// 			)

// 			console.log(clothe)

// 			await bot.sendMessage(
// 				chatId,
// 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${clothe.name}!`
// 			)

// 			await sendItemDescription(
// 				chatId,
// 				clothe.name,
// 				clothe.price,
// 				clothe.imageSrcs,
// 				clothe.id,
// 				category
// 			)
// 		} else {
// 			const category = '/holovni-ubory/'

// 			const categoryClothesLength = clothes[category].length
// 			const idOfRandomClothe = getRandomInt(0, categoryClothesLength - 1)
// 			const randomClothe = clothes[category].find(
// 				clothe => Number(clothe.id) === Number(idOfRandomClothe)
// 			)

// 			await bot.sendMessage(
// 				chatId,
// 				`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º, —â–æ –≤–∏ –∑–∞–º–æ–≤–∏–ª–∏ —Ç–∞–∫–æ–∂ –∑–∞–º–æ–≤–ª—è—é—Ç—å: ${randomClothe.name}!`
// 			)

// 			await sendItemDescription(
// 				chatId,
// 				randomClothe.name,
// 				randomClothe.price,
// 				randomClothe.imageSrcs,
// 				randomClothe.id,
// 				category
// 			)
// 		}

// 		await bot.sendMessage(
// 			chatForOrdersId,
// 			`
// 			\n –Ü–º'—è: ${state[chatId]?.fullName}
// 			\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${state[chatId]?.phoneNumber}
// 			\n–ú—ñ—Å—Ç–æ: ${state[chatId]?.city}
// 			\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏: ${state[chatId]?.mail}
// 			\n–¢–æ–≤–∞—Ä: ${state[chatId]?.productName}
// 			\n–¢–∏–ø –æ–ø–ª–∞—Ç–∏: ${state[chatId]?.paymentType === 'imposed' ? '–Ω–∞–ª–æ–∂–∫–∞' : '–æ–Ω–ª–∞–π–Ω'}
// 			\nUPD: —Ç–æ–≤–∞—Ä –∑–∞–º–æ–≤–∏–ª–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±–æ—Ç–∞
// 		`
// 		)

// 		state[chatId] = {}
// 		return
// 	}
// })
const TelegramBot = require('node-telegram-bot-api')
const https = require('https')
const sharp = require('sharp')
const token = '6965202334:AAEcJYVXE_NehXzEZ2NtjjdIHUT3PEvZGwQ'
// const token = '6085919277:AAGvJfRHmmSVj9FZJFOnhKWaJgJRrc1UwkI'
const bot = new TelegramBot(token, { polling: true })
const chatForOrdersId = '-1001731459101'
// const chatForOrdersId = '-1002123218064'
const fs = require('fs')

const clothes = JSON.parse(fs.readFileSync('clothes.json', 'utf8'))

// –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
const mainMenu = {
	keyboard: [
		[{ text: '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' }],
		[{ text: '–®—Ç–∞–Ω–∏' }],
		[{ text: '–ë—ñ–ª–∏–∑–Ω–∞' }],
		[{ text: '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' }],
		[{ text: '–ê–∫—Å–µ—Å—É–∞—Ä–∏' }],
		[{ text: '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' }],
		[{ text: '–ö–æ–º–ø–ª–µ–∫—Ç–∏' }],
		// [{ text: 'üß• –®—Ç–∞–Ω–∏ üß•', callback_data: 'menu_coffee2' }],
	],
	resize_keyboard: true,
}

function getRandomInt(min, max) {
	min = Math.ceil(min)
	max = Math.floor(max)
	return Math.floor(Math.random() * (max - min + 1)) + min
}

async function sendItemDescription(
	chatId,
	itemName,
	itemPrice,
	itemImages,
	itemId,
	category
) {
	const itemMessage = `${itemName}\n–¶—ñ–Ω–∞: ${itemPrice} –≥—Ä–Ω`

	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ URL-–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ç–∏–ø–æ–º 'photo'
	const media = itemImages.map(photoUrl => ({
		media: `https://545style.com${photoUrl}`,
		type: 'photo',
		caption: itemMessage, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
		parse_mode: 'Markdown',
	}))

	// –û–ø—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
	const itemOptions = {
		reply_markup: {
			inline_keyboard: [
				[
					{
						text: '–ö—É–ø–∏—Ç–∏',
						callback_data: `buy ${category} ${itemId}`,
					},
					{
						text: '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—å –±—ñ–ª—å—à–µ —Ñ–æ—Ç–æ–∫',
						callback_data: `more_photos ${category} ${itemId}`,
					},
				],
			],
		},
	}

	try {
		// –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≥—Ä—É–ø—É —Ñ–æ—Ç–æ
		await bot.sendPhoto(chatId, media[0].media)
		// await bot.sendPhoto(chatId, media[0].media, {
		// 	caption: itemMessage,
		// 	...itemOptions,
		// })

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		await bot.sendMessage(chatId, itemMessage, itemOptions)
	} catch (error) {
		console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≥—Ä—É–ø–∏ —Ñ–æ—Ç–æ:', error)
	}
}

const state = {}

bot.on('message', async msg => {
	const chatId = msg.chat.id
	console.log(state[chatId])

	if (msg.photo) {
		if (
			!!state[chatId]?.productName &&
			!!state[chatId]?.paymentType &&
			!!state[chatId]?.phoneNumber &&
			!!state[chatId]?.size &&
			!!state[chatId]?.fullName &&
			!!state[chatId]?.city &&
			!!state[chatId]?.mail
		) {
			const photo = msg.photo[msg.photo.length - 1]
			const fileId = photo.file_id

			await bot.getFile(fileId).then(fileInfo => {
				const fileUrl = `https://api.telegram.org/file/bot${token}/${fileInfo.file_path}`

				// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
				https.get(fileUrl, response => {
					if (response.statusCode !== 200) {
						console.error(
							'Failed to download image. HTTP Status Code:',
							response.statusCode
						)
						return
					}

					let imageData = Buffer.from([])

					// –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±—É—Ñ–µ—Ä
					response.on('data', chunk => {
						imageData = Buffer.concat([imageData, chunk])
					})

					// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
					response.on('end', () => {
						// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é sharp –≤ –ø–∞–º—è—Ç–∏
						sharp(imageData).toBuffer((err, processedImage) => {
							if (!err) {
								// –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —á–∞—Ç
								bot.sendPhoto(chatForOrdersId, processedImage, {
									caption: `
																		\n –Ü–º'—è: ${state[chatId]?.fullName}
																		\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${state[chatId]?.phoneNumber}
																		\n–ú—ñ—Å—Ç–æ: ${state[chatId]?.city}
																		\n–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏: ${state[chatId]?.mail}
																		\n–¢–æ–≤–∞—Ä: ${state[chatId]?.productName}
																		\n–¢–∏–ø –æ–ø–ª–∞—Ç–∏: ${state[chatId]?.paymentType === 'imposed' ? '–Ω–∞–ª–æ–∂–∫–∞' : '–æ–Ω–ª–∞–π–Ω'}
																		\nUPD: —Ç–æ–≤–∞—Ä –∑–∞–º–æ–≤–∏–ª–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –±–æ—Ç–∞
																`,
								})
							} else {
								console.error('Error processing image:', err)
							}
						})
					})
				})
			})

			await bot.sendMessage(
				chatId,
				`–í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–º–æ–≤–∏–ª–∏: ${state[chatId]?.productName}!`
			)

			if (
				state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe =>
						clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
				)

				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π —É—Ç–µ–ø–ª–µ–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∑ –º—ñ—Å—Ü–µ–º –ø—ñ–¥ –∂–µ—Ç–æ–Ω'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ —á–æ—Ä–Ω—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe =>
						clothe.name ===
						'–¢–∞–∫—Ç–∏—á–Ω–∏–π —É—Ç–µ–ø–ª–µ–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∑ –º—ñ—Å—Ü–µ–º –ø—ñ–¥ –∂–µ—Ç–æ–Ω'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style —Å–∏–Ω—ñ–π –∂—ñ–Ω–æ—á–∏–π'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —Ç–µ–º–Ω–æ-—Å–∏–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style black —ñ–∑ –∂–µ—Ç–æ–Ω–æ–º'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —á–æ—Ä–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —á–æ—Ä–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe =>
						clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style black —ñ–∑ –∂–µ—Ç–æ–Ω–æ–º'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —Ç–µ–º–Ω–æ-—Å–∏–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style —Å–∏–Ω—ñ–π –∂—ñ–Ω–æ—á–∏–π'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —á–æ—Ä–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —á–æ—Ä–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∂—ñ–Ω–æ—á–∏–π black'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (state[chatId]?.productName === '–ö—É—Ä—Ç–∫–∞ Soft Shell –æ–ª–∏–≤–∞') {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ –æ–ª–∏–≤–∞'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–®—Ç–∞–Ω–∏ Soft Shell –Ω–∞ —Ñ–ª—ñ—Å—ñ –æ–ª–∏–≤–∞'
			) {
				const category = '/kurtky/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–ö—É—Ä—Ç–∫–∞ Soft Shell –æ–ª–∏–≤–∞'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe =>
						clothe.name === '–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–õ–æ–Ω—Å–ª—ñ–≤ –ù–ì–£ –∂—ñ–Ω–æ—á–∏–π 5.45style'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe =>
						clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –∂—ñ–Ω–æ—á—ñ –æ–ª–∏–≤–∞ (—Ö–∞–∫—ñ)'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –∂—ñ–Ω–æ—á—ñ –æ–ª–∏–≤–∞ (—Ö–∞–∫—ñ)'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–õ–æ–Ω—Å–ª—ñ–≤ –ù–ì–£ –∂—ñ–Ω–æ—á–∏–π 5.45style'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ –∂—ñ–Ω–æ—á–∏–π 5.45style –ø—ñ–∫—Å–µ–ª—å'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style –ø—ñ–∫—Å–µ–ª—å –∂—ñ–Ω–æ—á—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName ===
				'–¢–∞–∫—Ç–∏—á–Ω–∏–π —É—Ç–µ–ø–ª–µ–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∑ –º—ñ—Å—Ü–µ–º –ø—ñ–¥ –∂–µ—Ç–æ–Ω'
			) {
				const category = '/shtany/'

				const clothe = clothes[category].find(
					clothe => clothe.name === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —á–æ—Ä–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else if (
				state[chatId]?.productName === '–¢–∞–∫—Ç–∏—á–Ω—ñ —à—Ç–∞–Ω–∏ 5.45style —á–æ—Ä–Ω—ñ –∂—ñ–Ω–æ—á—ñ'
			) {
				const category = '/futbolky/'

				const clothe = clothes[category].find(
					clothe =>
						clothe.name ===
						'–¢–∞–∫—Ç–∏—á–Ω–∏–π —É—Ç–µ–ø–ª–µ–Ω–∏–π –ª–æ–Ω–≥—Å–ª—ñ–≤ 5.45style –∑ –º—ñ—Å—Ü–µ–º –ø—ñ–¥ –∂–µ—Ç–æ–Ω'
				)
				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${clothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${clothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			} else {
				const category = '/holovni-ubory/'
				const isManClothe = !state[chatId]?.productName.includes('–∂—ñ–Ω–æ—á')

				const manOrWomanClothes = clothes[category].filter(clothe =>
					!isManClothe
						? clothe.name.includes('–∂—ñ–Ω–æ—á')
						: !clothe.name.includes('–∂—ñ–Ω–æ—á')
				)

				const categoryClothesLength = manOrWomanClothes.length
				const idOfRandomClothe = getRandomInt(0, categoryClothesLength - 1)

				const randomClothe = manOrWomanClothes.find(
					(clothe, i) => i === Number(idOfRandomClothe)
				)

				const itemOptions = {
					reply_markup: {
						inline_keyboard: [
							[
								{
									text: '–¢–∞–∫',
									callback_data: `is_want_induct true ${category} ${randomClothe.id}`,
								},
								{
									text: '–ù—ñ',
									callback_data: `is_want_induct false`,
								},
							],
						],
					},
				}

				await bot.sendMessage(
					chatId,
					`–†–∞–∑–æ–º –∑ —Ç–æ–≤–∞—Ä–æ–º —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –∑–∞–º–æ–≤–ª—è—Ç—å: ${randomClothe.name}!`
				)

				await bot.sendMessage(
					chatId,
					`–ë–∞–∂–∞—î—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ç–æ–≤–∞—Ä–æ–º?`,
					itemOptions
				)
			}

			state[chatId] = {}
			return
		}
	}

	if (msg.text === '/start') {
		await bot.sendMessage(chatId, '–í—ñ—Ç–∞—î–º–æ –≤–∞—Å üëã')
	}

	if (msg.text === '/start' || msg.text === '–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é') {
		state[chatId] = {}
		await bot.sendMessage(
			chatId,
			'–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª, —â–æ–± –≤–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ª—ñ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:',
			{
				reply_markup: mainMenu,
			}
		)
	}

	if (
		msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ' ||
		msg.text === '–®—Ç–∞–Ω–∏' ||
		msg.text === '–ë—ñ–ª–∏–∑–Ω–∞' ||
		msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥' ||
		msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏' ||
		msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏' ||
		msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
	) {
		state[chatId] = {}
		state[chatId].clothe =
			msg.text === '–§—É—Ç–±–æ–ª–∫–∏,–õ–æ–Ω–≥—Å–ª—ñ–≤–∏ —Ç–∞ –ü–æ–ª–æ'
				? 'tshirts'
				: msg.text === '–®—Ç–∞–Ω–∏'
				? 'trousers'
				: msg.text === '–ë—ñ–ª–∏–∑–Ω–∞'
				? 'whiteness'
				: msg.text === '–í–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥'
				? 'outerwear'
				: msg.text === '–ê–∫—Å–µ—Å—É–∞—Ä–∏'
				? 'accessories'
				: msg.text === '–ì–æ–ª–æ–≤–Ω—ñ —É–±–æ—Ä–∏'
				? 'hats'
				: msg.text === '–ö–æ–º–ø–ª–µ–∫—Ç–∏'
				? 'kits'
				: ''
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ "—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∏ "–Ω–µ—É—Ç–µ–ø–ª–µ–Ω–Ω—ã—Ö" –∫–æ—Ñ—Ç
		await bot.sendMessage(chatId, '–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –æ–¥—è–≥—É:', {
			reply_markup: {
				inline_keyboard: [
					[
						{ text: '–£—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'warm' },
						{ text: '–ù–µ—É—Ç–µ–ø–ª–µ–Ω—ñ', callback_data: 'not_warm' },
					],
				],
			},
		})
	}
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
bot.on('callback_query', async query => {
	const chatId = query.message.chat.id
	const clothingType = query.data
	const clothe = state[chatId].clothe

	console.log(state[chatId])

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ñ—Ç
	if (clothingType === 'warm' || clothingType === 'not_warm') {
		const category =
			clothe === 'tshirts'
				? '/futbolky/'
				: clothe === 'trousers'
				? '/shtany/'
				: clothe === 'whiteness'
				? '/termo-bilyzna/'
				: clothe === 'outerwear'
				? '/kurtky/'
				: clothe === 'accessories'
				? '/aksesuary/'
				: clothe === 'hats'
				? '/holovni-ubory/'
				: clothe === 'kits'
				? '/komplekty/'
				: ''
		const clothesByCategory = clothes[category]
		let isClotheExists = false

		if (clothingType === 'warm') {
			for (const clothe of clothesByCategory) {
				if (clothe.isWarm) {
					isClotheExists = true
					await sendItemDescription(
						chatId,
						clothe.name,
						clothe.price,
						clothe.imageSrcs,
						clothe.id,
						category
					)
				}
			}
		}

		if (clothingType === 'not_warm') {
			for (const clothe of clothesByCategory) {
				if (!clothe.isWarm) {
					isClotheExists = true

					await sendItemDescription(
						chatId,
						clothe.name,
						clothe.price,
						clothe.imageSrcs,
						clothe.id,
						category
					)
				}
			}
		}

		if (!isClotheExists) {
			bot.sendMessage(chatId, '–¢–∞–∫–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞—Ä–∞–∑ –Ω–µ–º–∞ —É –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ')
		}

		// bot.sendMessage(
		// 	chatId,
		// 	'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è',
		// 	{
		// 		reply_markup: {
		// 			keyboard: [['–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é']],
		// 			resize_keyboard: true,
		// 			one_time_keyboard: true,
		// 		},
		// 	}
		// )
	}

	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ buy
	if (clothingType.split(' ')[0] === 'buy') {
		const productCategory = clothingType.split(' ')[1]
		const productId = clothingType.split(' ')[2]
		const clothesByCategory = clothes[productCategory]
		const orderedProduct = clothesByCategory.find(clothe => {
			return Number(clothe.id) === Number(productId)
		})

		state[chatId].productName = orderedProduct.name

		await bot.sendMessage(
			chatId,
			`–í–∏ –æ–±—Ä–∞–ª–∏: "${state[chatId].productName}"`,
			{}
		)
		await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –ø–ª–∞—Ç–µ–∂—É:', {
			reply_markup: {
				inline_keyboard: [
					[
						{
							text: '–ù–∞–∫–ª–∞–¥–µ–Ω–∏–π',
							callback_data: `payment-type imposed`,
						},
						{
							text: '–û–Ω–ª–∞–π–Ω',
							callback_data: `payment-type online`,
						},
					],
				],
			},
		})
	}
	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
	if (clothingType.split(' ')[0] === 'payment-type') {
		const firstSpaceIndex = clothingType.indexOf(' ')
		const paymentType =
			firstSpaceIndex !== -1
				? clothingType.slice(firstSpaceIndex + 1)
				: clothingType

		// const productName = clothingType.split(' ')[1]

		state[chatId].paymentType = paymentType

		bot.sendMessage(chatId, '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
	}

	// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞
	if (clothingType.split(' ')[0] === 'more_photos') {
		const productCategory = clothingType.split(' ')[1]
		const productId = clothingType.split(' ')[2]
		const clothesByCategory = clothes[productCategory]
		const orderedProduct = clothesByCategory.find(clothe => {
			return Number(clothe.id) === Number(productId)
		})

		const itemOptions = {
			reply_markup: {
				inline_keyboard: [
					[
						{
							text: '–ö—É–ø–∏—Ç–∏',
							callback_data: `buy ${productCategory} ${productId}`,
						},
					],
				],
			},
		}

		const media = orderedProduct.imageSrcs.map(photoUrl => ({
			media: `https://545style.com${photoUrl}`,
			type: 'photo',
			caption: '1', // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
			parse_mode: 'Markdown',
		}))

		await bot.sendMessage(chatId, `–ë—ñ–ª—å—à–µ —Ñ–æ—Ç–æ–∫ –¥–ª—è "${orderedProduct.name}"`)
		await bot.sendMediaGroup(chatId, media)
		await bot.sendMessage(
			chatId,
			`–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç–∏", —â–æ–± –ø—Ä–∏–¥–±–∞—Ç–∏ —Ç–æ–≤–∞—Ä`,
			itemOptions
		)
	}

	if (clothingType.split(' ')[0] === 'is_want_induct') {
		if (eval(clothingType.split(' ')[1])) {
			const productCategory = clothingType.split(' ')[2]
			const productId = clothingType.split(' ')[3]
			const clothesByCategory = clothes[productCategory]
			const orderedProduct = clothesByCategory.find(clothe => {
				return Number(clothe.id) === Number(productId)
			})

			await sendItemDescription(
				chatId,
				orderedProduct.name,
				orderedProduct.price,
				orderedProduct.imageSrcs,
				orderedProduct.id,
				productCategory
			)
		} else {
			bot.sendMessage(chatId, '–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
		}
	}
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('text', async msg => {
	const chatId = msg.chat.id
	console.log(state[chatId])

	if (
		!!state[chatId]?.productName &&
		!!state[chatId]?.paymentType &&
		!state[chatId]?.phoneNumber
	) {
		state[chatId].phoneNumber = msg.text

		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä`)
		return
	}
	if (
		!!state[chatId]?.productName &&
		!!state[chatId]?.paymentType &&
		!!state[chatId]?.phoneNumber &&
		!state[chatId]?.size
	) {
		state[chatId].size = msg.text

		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à –ü–Ü–ë`)
		return
	}
	if (
		!!state[chatId]?.productName &&
		!!state[chatId]?.paymentType &&
		!!state[chatId]?.phoneNumber &&
		!!state[chatId]?.size &&
		!state[chatId]?.fullName
	) {
		state[chatId].fullName = msg.text

		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ç–æ`)
		return
	}
	if (
		!!state[chatId]?.productName &&
		!!state[chatId]?.paymentType &&
		!!state[chatId]?.phoneNumber &&
		!!state[chatId]?.size &&
		!!state[chatId]?.fullName &&
		!state[chatId]?.city
	) {
		state[chatId].city = msg.text

		bot.sendMessage(chatId, `–£–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ—à—Ç–∏`)
		return
	}
	if (
		!!state[chatId]?.productName &&
		!!state[chatId]?.paymentType &&
		!!state[chatId]?.phoneNumber &&
		!!state[chatId]?.size &&
		!!state[chatId]?.fullName &&
		!!state[chatId]?.city &&
		!state[chatId]?.mail
	) {
		state[chatId].mail = msg.text

		if (state[chatId]?.paymentType === 'imposed') {
			await bot.sendMessage(
				chatId,
				`
			–ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç—É —É —Ä–æ–∑–º—ñ—Ä—ñ 200–≥—Ä–Ω –Ω–∞
			–∫–∞—Ä—Ç—É: 5375411402901206 –¢–µ—Ä–µ–∑ –ê.
			–∞–±–æ 
			–Ω–∞ IBAN: –§–û–ü –¢–µ—Ä–µ–∑ –ê—Ä—Ç–µ–º –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á IBAN UA053220010000026004320012081 –Ü–ü–ù/–Ñ–î–†–ü–û–£ 3392401775 –ê–∫—Ü—ñ–æ–Ω–µ—Ä–Ω–µ —Ç–æ–≤–∞—Ä–∏—Å—Ç–≤–æ –£–ù–Ü–í–ï–†–°–ê–õ –ë–ê–ù–ö –ú–§–û 322001 –Ñ–î–†–ü–û–£ –ë–∞–Ω–∫—É 21133352
			
			–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó —É –±–æ—Ç–∞!
			`
			)
		} else {
			await bot.sendMessage(
				chatId,
				`
			–ù–∞–¥—ñ—à–ª—ñ—Ç—å –æ–ø–ª–∞—Ç—É –Ω–∞
			–∫–∞—Ä—Ç—É: 5375411402901206 –¢–µ—Ä–µ–∑ –ê.
			–∞–±–æ 
			–Ω–∞ IBAN: –§–û–ü –¢–µ—Ä–µ–∑ –ê—Ä—Ç–µ–º –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á IBAN UA053220010000026004320012081 –Ü–ü–ù/–Ñ–î–†–ü–û–£ 3392401775 –ê–∫—Ü—ñ–æ–Ω–µ—Ä–Ω–µ —Ç–æ–≤–∞—Ä–∏—Å—Ç–≤–æ –£–ù–Ü–í–ï–†–°–ê–õ –ë–ê–ù–ö –ú–§–û 322001 –Ñ–î–†–ü–û–£ –ë–∞–Ω–∫—É 21133352
			
			–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó —É –±–æ—Ç–∞!
			`
			)
		}
	}
})
